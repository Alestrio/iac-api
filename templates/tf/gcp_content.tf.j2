provider "google" {
    project = local.project_id
    region = local.region
}

{% for net in networks %}
resource "google_compute_network" "{{net.name}}" {
    name = "{{net.name}}"
    auto_create_subnetworks = {{ "true" if net.subnet != "" else "false" }}
    {% if net.subnet %}
    ipv4_range = "{{net.subnet}}"
    {% endif %}
}

{% for firewall in net.firewall_rules %}
resource "google_compute_firewall" "{{firewall.name}}" {
    name = "{{firewall.name}}"
    network = "{{ net.name }}"
{#  allow or deny => class name to lower case #}
{% if firewall.allows %}
{%  for rule in firewall.allows %}
        allow = {
            ports = {{ rule.ports }}
            protocol = "{{ rule.protocol }}"
            source_networks = {{ rule.source_networks }}
        }
{% endfor %}
{% endif %}
{% if firewall.denies %}
{%  for rule in firewall.denies %}
        deny = {
            ports = {{ rule.ports }}
            protocol = "{{ rule.protocol }}"
            source_networks = {{ rule.source_networks }}
        }
{% endfor %}
{% endif %}
    {% if firewall.target_tags != [] %}
    target_tags = {{ firewall.target_tags }}
    {% endif %}
    priority = 1000
}
{% endfor %}
{% endfor %}

resource "google_compute_instance" "instances"{
    for_each = {
        for k, v in local.machines : k => v
        if contains(v.providers, "gcp")
    }

    name = each.key
    machine_type = each.value.gcp_type
    zone = each.value.gcp_zone
    boot_disk {
        initialize_params {
            image = each.value.disks.0.image
        }
    }
    network_interface {
        network = each.value.gcp_network
        access_config {
            nat_ip = google_compute_address.addr-front.address
        }
    }

    provisioner "remote-exec" {
        connection {
          type        = "ssh"
          user        = local.ssh_user
          private_key = file(local.private_key_path)
          host        = self.network_interface.0.access_config.0.nat_ip
        }
    }
}


